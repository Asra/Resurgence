// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.MirDatabase;

#nullable disable

namespace Server.Library.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20250309203355_QuestInfo")]
    partial class QuestInfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Awake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Type")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("listAwake")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Awakes");
                });

            modelBuilder.Entity("ExpireInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExpireInfos");
                });

            modelBuilder.Entity("GuildBuff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActiveTimeRemaining")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GuildInfoGuildIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InfoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuildInfoGuildIndex");

                    b.HasIndex("InfoId");

                    b.ToTable("GuildBuff");
                });

            modelBuilder.Entity("GuildBuffInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActivationCost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Icon")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("LevelRequirement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<byte>("PointsRequirement")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StatsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimeLimit")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StatsId");

                    b.ToTable("GuildBuffInfo");
                });

            modelBuilder.Entity("GuildMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GuildRankId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasVoted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Online")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuildRankId");

                    b.ToTable("GuildMember");
                });

            modelBuilder.Entity("GuildRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GuildInfoGuildIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Options")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GuildInfoGuildIndex");

                    b.ToTable("GuildRank");
                });

            modelBuilder.Entity("ItemInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Bind")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanAwakening")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanFastRun")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanMine")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ClassBased")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Durability")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Effect")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("GlobalDropNotify")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Image")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LevelBased")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Light")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NeedIdentify")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("RandomStatsId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("RequiredAmount")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("RequiredClass")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("RequiredGender")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("RequiredType")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Set")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Shape")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowGroupPickup")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Slots")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("StackSize")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("StartItem")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToolTip")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<short>("Unique")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Index");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("RentalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("BindingFlags")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RentalLocked")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("RentalInformations");
                });

            modelBuilder.Entity("SealedInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NextSealDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SealedInfos");
                });

            modelBuilder.Entity("Server.Library.MirDatabase.GTMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Begin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Days")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Key")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Leader")
                        .HasColumnType("TEXT");

                    b.Property<string>("Leader2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GTMaps");
                });

            modelBuilder.Entity("Server.MirDatabase.DragonInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BodyName")
                        .HasColumnType("TEXT");

                    b.Property<int>("DropAreaBottomX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DropAreaBottomY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DropAreaTopX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DropAreaTopY")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Experience")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Exps")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationY")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MapFileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MonsterName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DragonInfo");
                });

            modelBuilder.Entity("Server.MirDatabase.GuildInfo", b =>
                {
                    b.Property<int>("GuildIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Experience")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlagColourArgb")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("FlagImage")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GTBegin")
                        .HasColumnType("TEXT");

                    b.Property<int>("GTIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GTKey")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GTPrice")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GTRent")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Gold")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastVoteAttempt")
                        .HasColumnType("TEXT");

                    b.Property<byte>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberCap")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Membercount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Notice")
                        .HasColumnType("TEXT");

                    b.Property<byte>("SparePoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Votes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Voting")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuildIndex");

                    b.ToTable("GuildInfos");
                });

            modelBuilder.Entity("Server.MirDatabase.HeroInfo", b =>
                {
                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("AutoHPPercent")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("AutoMPPercent")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutoPot")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Grade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HPItemIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MPItemIndex")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("SealCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Index");

                    b.ToTable("HeroInfos");
                });

            modelBuilder.Entity("Server.MirDatabase.MagicInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("BaseCost")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("DelayBase")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("DelayReduction")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Icon")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Level1")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Level2")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Level3")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("LevelCost")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("MPowerBase")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("MPowerBonus")
                        .HasColumnType("INTEGER");

                    b.Property<float>("MultiplierBase")
                        .HasColumnType("REAL");

                    b.Property<float>("MultiplierBonus")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Need1")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Need2")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Need3")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("PowerBase")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("PowerBonus")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Range")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Spell")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MagicInfo");
                });

            modelBuilder.Entity("Server.MirDatabase.MapInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActiveCoordsJson")
                        .HasColumnType("TEXT");

                    b.Property<ushort>("BigMap")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Fight")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Fire")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FireDamage")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("GT")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("GTIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Light")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Lightning")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LightningDamage")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("MapDarkLight")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("MineIndex")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("MiniMap")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Music")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NeedBridle")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NeedHole")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoDropMonster")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoDropPlayer")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoDrug")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoEscape")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoFight")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoMount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoNames")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoPosition")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoRandom")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoRecall")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoReconnect")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NoReconnectMap")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NoReincarnation")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoTeleport")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoThrowItem")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NoTownTeleport")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<ushort>("WeatherParticles")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MapInfo");
                });

            modelBuilder.Entity("Server.MirDatabase.MineZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationY")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MapInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Mine")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MapInfoId");

                    b.ToTable("MineZone");
                });

            modelBuilder.Entity("Server.MirDatabase.MovementInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConquestIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DestinationX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DestinationY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Icon")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MapIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MapInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NeedHole")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NeedMove")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowOnBigMap")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SourceX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SourceY")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MapInfoId");

                    b.ToTable("MovementInfos");
                });

            modelBuilder.Entity("Server.MirDatabase.NPCInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BigMapIcon")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CanTeleportTo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassRequired")
                        .HasColumnType("TEXT");

                    b.Property<string>("CollectQuestIndexesJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("ColourHex")
                        .HasColumnType("TEXT");

                    b.Property<int>("Conquest")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConquestVisible")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DayofWeek")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FinishQuestIndexesJson")
                        .HasColumnType("TEXT");

                    b.Property<int>("FlagNeeded")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("HourEnd")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("HourStart")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Image")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MapIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MapInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("MaxLev")
                        .HasColumnType("INTEGER");

                    b.Property<short>("MinLev")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("MinuteEnd")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("MinuteStart")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Rate")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Sabuk")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowOnBigMap")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TimeVisible")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MapInfoId");

                    b.ToTable("NPCInfos");
                });

            modelBuilder.Entity("Server.MirDatabase.RespawnInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Delay")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MapInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonsterIndex")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("RandomDelay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RespawnIndex")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("RespawnTicks")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoutePath")
                        .HasColumnType("TEXT");

                    b.Property<bool>("SaveRespawnTime")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Spread")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MapInfoId");

                    b.ToTable("RespawnInfo");
                });

            modelBuilder.Entity("Server.MirDatabase.SafeZoneInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocationY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MapInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("StartPoint")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MapInfoId");

                    b.ToTable("SafeZoneInfos");
                });

            modelBuilder.Entity("Stats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Accuracy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Agility")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttackBonus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttackSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttackSpeedRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BagWeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CraftRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CriticalDamage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CriticalRate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DamageReductionPercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EnergyShieldHPGain")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EnergyShieldPercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExpRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FishRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Freezing")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GemRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoldDropRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HPDrainRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HPRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandWeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HealthRecovery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hero")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Holy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemDropRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemInfoIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LoverExpRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Luck")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MPRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MagicResist")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ManaPenaltyPercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxAC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxACRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxDC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxDCRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxMAC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxMACRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxMC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxMCRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxSC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxSCRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MentorDamageRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MentorExpRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinAC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinDC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinMAC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinMC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinSC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MineRatePercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PoisonAttack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PoisonRecovery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PoisonResist")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reflect")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillGainMultiplier")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpellRecovery")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Strong")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeleportManaPenaltyPercent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Unknown")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WearWeight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemInfoIndex")
                        .IsUnique();

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("UserItem", b =>
                {
                    b.Property<ulong>("UniqueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddedStatsId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AwakeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BuybackExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("CurrentDura")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Cursed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DuraChanged")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ExpireInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("GMMade")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("GemCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Identified")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsShopItem")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemIndex")
                        .HasColumnType("INTEGER");

                    b.Property<ushort>("MaxDura")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("ParentItemID")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("RefineAdded")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RefineSuccessChance")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("RefinedValue")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RentalInformationId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SealedInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SlotsJson")
                        .HasColumnType("TEXT");

                    b.Property<int>("SoulBoundId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeddingRing")
                        .HasColumnType("INTEGER");

                    b.HasKey("UniqueID");

                    b.HasIndex("AddedStatsId");

                    b.HasIndex("AwakeId");

                    b.HasIndex("ExpireInfoId");

                    b.HasIndex("ItemIndex");

                    b.HasIndex("ParentItemID");

                    b.HasIndex("RentalInformationId");

                    b.HasIndex("SealedInfoId");

                    b.ToTable("UserItems");
                });

            modelBuilder.Entity("GuildBuff", b =>
                {
                    b.HasOne("Server.MirDatabase.GuildInfo", null)
                        .WithMany("BuffList")
                        .HasForeignKey("GuildInfoGuildIndex");

                    b.HasOne("GuildBuffInfo", "Info")
                        .WithMany()
                        .HasForeignKey("InfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Info");
                });

            modelBuilder.Entity("GuildBuffInfo", b =>
                {
                    b.HasOne("Stats", "Stats")
                        .WithMany()
                        .HasForeignKey("StatsId");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("GuildMember", b =>
                {
                    b.HasOne("GuildRank", null)
                        .WithMany("Members")
                        .HasForeignKey("GuildRankId");
                });

            modelBuilder.Entity("GuildRank", b =>
                {
                    b.HasOne("Server.MirDatabase.GuildInfo", null)
                        .WithMany("Ranks")
                        .HasForeignKey("GuildInfoGuildIndex");
                });

            modelBuilder.Entity("Server.MirDatabase.MineZone", b =>
                {
                    b.HasOne("Server.MirDatabase.MapInfo", null)
                        .WithMany("MineZones")
                        .HasForeignKey("MapInfoId");
                });

            modelBuilder.Entity("Server.MirDatabase.MovementInfo", b =>
                {
                    b.HasOne("Server.MirDatabase.MapInfo", null)
                        .WithMany("Movements")
                        .HasForeignKey("MapInfoId");
                });

            modelBuilder.Entity("Server.MirDatabase.NPCInfo", b =>
                {
                    b.HasOne("Server.MirDatabase.MapInfo", null)
                        .WithMany("NPCs")
                        .HasForeignKey("MapInfoId");
                });

            modelBuilder.Entity("Server.MirDatabase.RespawnInfo", b =>
                {
                    b.HasOne("Server.MirDatabase.MapInfo", "Map")
                        .WithMany("Respawns")
                        .HasForeignKey("MapInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");
                });

            modelBuilder.Entity("Server.MirDatabase.SafeZoneInfo", b =>
                {
                    b.HasOne("Server.MirDatabase.MapInfo", "Info")
                        .WithMany("SafeZones")
                        .HasForeignKey("MapInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Info");
                });

            modelBuilder.Entity("Stats", b =>
                {
                    b.HasOne("ItemInfo", null)
                        .WithOne("Stats")
                        .HasForeignKey("Stats", "ItemInfoIndex");
                });

            modelBuilder.Entity("UserItem", b =>
                {
                    b.HasOne("Stats", "AddedStats")
                        .WithMany()
                        .HasForeignKey("AddedStatsId");

                    b.HasOne("Awake", "Awake")
                        .WithMany()
                        .HasForeignKey("AwakeId");

                    b.HasOne("ExpireInfo", "ExpireInfo")
                        .WithMany()
                        .HasForeignKey("ExpireInfoId");

                    b.HasOne("ItemInfo", "Info")
                        .WithMany()
                        .HasForeignKey("ItemIndex")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserItem", null)
                        .WithMany("Slots")
                        .HasForeignKey("ParentItemID");

                    b.HasOne("RentalInformation", "RentalInformation")
                        .WithMany()
                        .HasForeignKey("RentalInformationId");

                    b.HasOne("SealedInfo", "SealedInfo")
                        .WithMany()
                        .HasForeignKey("SealedInfoId");

                    b.Navigation("AddedStats");

                    b.Navigation("Awake");

                    b.Navigation("ExpireInfo");

                    b.Navigation("Info");

                    b.Navigation("RentalInformation");

                    b.Navigation("SealedInfo");
                });

            modelBuilder.Entity("GuildRank", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("ItemInfo", b =>
                {
                    b.Navigation("Stats");
                });

            modelBuilder.Entity("Server.MirDatabase.GuildInfo", b =>
                {
                    b.Navigation("BuffList");

                    b.Navigation("Ranks");
                });

            modelBuilder.Entity("Server.MirDatabase.MapInfo", b =>
                {
                    b.Navigation("MineZones");

                    b.Navigation("Movements");

                    b.Navigation("NPCs");

                    b.Navigation("Respawns");

                    b.Navigation("SafeZones");
                });

            modelBuilder.Entity("UserItem", b =>
                {
                    b.Navigation("Slots");
                });
#pragma warning restore 612, 618
        }
    }
}
